########################################################################
# Extract Speedtest information
#  Page: 1
#  Information               Status     Statistics
#  - Ping                   - yes      - yes
#  - Download               - yes      - yes
#  - Upload                 - yes      - yes
########################################################################
dynamic.1.name=Ping
dynamic.1.source=/root/ping.txt
dynamic.1.regexp=(.*)
dynamic.1.postprocess=$1

dynamic.2.name=Download
dynamic.2.source=/root/download.txt
dynamic.2.regexp=(.*)
dynamic.2.postprocess=$1

dynamic.3.name=Upload
dynamic.3.source=/root/upload.txt
dynamic.3.regexp=(.*)
dynamic.3.postprocess=$1

web.status.1.content.8.name=Net Speed
web.status.1.content.8.icon=network-icon.png
web.status.1.content.8.line.1="Ping: <b>"+KMG(data.Ping)+"ms <i class='glyphicon glyphicon-sort'></i></b> Download: <b>"+KMG(data.Download)+"Mbit/s <i class='glyphicon glyphicon-arrow-down'></i></b> Upload: <b>"+KMG(data.Upload)+"Mbit/s <i class='glyphicon glyphicon-arrow-up'></i></b>"
#web.status.1.content.8.line.2="Download: <b>"+data.Download+" Mbit/s</b>"
#web.status.1.content.8.line.3="Upload: <b>"+data.Upload+" Mbit/s</b>"

web.statistics.1.content.2.name=Speedtest
web.statistics.1.content.2.graph.1=Upload
web.statistics.1.content.2.graph.2=Download
web.statistics.1.content.2.graph_options.yaxis={ tickFormatter: function (v) { (Math.round(v*10/1024/1024)/10) + " MiB/s" ; (Math.round(v*10/1024)/10) + " KiB/s" ; else return v + " B/s" }, }
web.statistics.1.content.2.ds_graph_options.speed_send.label=Upload (MB)
web.statistics.1.content.2.ds_graph_options.speed_send.lines={ fill: true }
web.statistics.1.content.2.ds_graph_options.speed_send.color="#FF7777"
web.statistics.1.content.2.ds_graph_options.speed_received.label=Download (MB)
web.statistics.1.content.2.ds_graph_options.speed_received.lines={ fill: true }
web.statistics.1.content.2.7ds_graph_options.speed_received.color="#77FF77"

